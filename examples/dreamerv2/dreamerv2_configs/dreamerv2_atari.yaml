dl_toolbox: "torch"  # The deep learning toolbox. Choices: "torch", "mindspore", "tensorlayer"
project_name: "XuanCe_Benchmark"
logger: "tensorboard"  # Choices: tensorboard, wandb.
wandb_user_name: "your_user_name"
render: False
render_mode: 'rgb_array' # Choices: 'human', 'rgb_array'.
fps: 50
test_mode: False


# TODO
obs_type: "grayscale"  # choice for Atari env: ram, rgb, grayscale
#img_size: [84, 84]  # default is 210 x 160 in gym[Atari]
#num_stack: 4  # frame stack trick
#frame_skip: 4  # frame skip trick
img_size: [64, 64]  # default is 210 x 160 in gym[Atari]
num_stack: 1  # frame stack trick
frame_skip: 1  # frame skip trick
noop_max: 30  # Do no-op action for a number of steps in [1, noop_max].

# Good HyperParameters for Atari Games, Do not change them.
filters: [32, 64, 64]
kernels: [8, 4, 3]
strides: [4, 2, 1]
fc_hidden_sizes: [512, ]  # fully connected layer hidden sizes.

# --------------------
agent: "DreamerV2"
env_name: "Atari"
env_id: "ALE/Breakout-v5"
env_seed: 1111
vectorize: "Dummy_Atari"
#vectorize: "Subproc_Atari"
learner: "DreamerV2_Learner"
policy: "Categorical_DreamerV2"
representation: "WorldModel_DreamerV2"
runner: "DRL"

representation_hidden_size: [128,]
actor_hidden_size: [128,]
critic_hidden_size: [128,]
activation: 'elu'

seed: 1
#parallels: 10
parallels: 8
#parallels: 5
#parallels: 1
running_steps: 10000000  # 10M
horizon_size: 100000  # the horizon size for an environment, buffer_size = horizon_size * parallels.
n_epochs: 1
#n_epochs: 5
# self.buffer_size = self.n_envs * self.horizon_size
# self.batch_size = self.buffer_size // self.n_minibatch in prev on-policy agent
n_minibatch: 1  # train 1 times
learning_rate_model: 0.0002
learning_rate_actor: 0.00004
learning_rate_critic: 0.0001

# TODO delete start
vf_coef: 0.25
ent_coef: 0.01
gae_lambda: 0.95
gamma: 0.99
use_gae: False
use_advnorm: False
# TODO delete end

use_grad_clip: True  # gradient normalization
clip_type: 1  # Gradient clip for Mindspore: 0: ms.ops.clip_by_value; 1: ms.nn.ClipByNorm()
#grad_clip_norm: 0.5
grad_clip_norm: 100.0
use_actions_mask: False
use_obsnorm: True
use_rewnorm: True
#use_obsnorm: False
#use_rewnorm: False
obsnorm_range: 5
rewnorm_range: 5

test_steps: 10000
eval_interval: 100000
test_episode: 3
log_dir: "./logs/dreamerv2/"
model_dir: "./models/dreamerv2/"

# World Model start  (TODO unique)
discount_: 0.995
device: "cuda:0"
horizon: 15  # imagine_horizon
seq_len: 50  # observe_len
lambda_: 0.95
rssm_type: 'discrete'
embedding_size: 600
rssm_node_size: 600
rssm_info:
  deter_size: 600
  stoch_size: 32
  class_size: 32
  category_size: 32
  min_std: 0.1
pixel: True
obs_encoder:
  layers: 4
  node_size: 600
  dist: None
  activation: "elu"
  kernels: [4, 4, 4, 4]
  depth: 48
obs_decoder:
  layers: 4
  node_size: 600
  dist: 'normal'
  activation: "elu"
  kernels: [5, 5, 6, 6]
  depth: 48
reward:
  layers: 4
  node_size: 600
  dist: 'normal'
  activation: "elu"
discount:
  layers: 4
  node_size: 600
  dist: 'binary'
  activation: "elu"
loss_scale:
  kl: 0.1
  reward: 1.0
  discount: 5.0
kl:
  use_kl_balance: True
  kl_balance_scale: 0.8
  use_free_nats: False
  free_nats: 0.0

# World Model end

# TODO
#training_frequency: 50
training_frequency: 16
#batch_size: 50
batch_size: 8  # batch_size * parallels = total_batch, 8 * 8 = 64
#batch_size: 1
#eval_episode: 4
#eval_render: True
#save_every: 100000
#seed_steps: 4000


grad_clip: 100.0

#slow_target_fraction: 1.00
#soft_update_frequency: 5
#tau: 0.005
soft_update_frequency: 100
tau: 1.0  # hard update

# TODO
actor_grad: 'reinforce'
actor_grad_mix: 0.0
# rho = 1 and ita = 1e-3 for Atari; rho = 0 and ita = 1e-4 for continuous control
ita: 0.001
rho: 1.0
#rho: 0.0


# ----------------------------------------------------

distributed_training: False  # Whether to use multi-GPU for distributed training.
master_port: '12355'  # The master port for current experiment when use distributed training.


